// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SplitQueryPoolExhaustionRepro;

#nullable disable

namespace SplitQueryPoolExhaustionRepro.Migrations
{
    [DbContext(typeof(PizzaDbContext))]
    partial class PizzaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SplitQueryPoolExhaustionRepro.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cheese",
                            PizzaId = 1,
                            Price = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tomato",
                            PizzaId = 2,
                            Price = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Oregano",
                            PizzaId = 3,
                            Price = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cheese",
                            PizzaId = 1,
                            Price = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Tomato",
                            PizzaId = 2,
                            Price = 4
                        },
                        new
                        {
                            Id = 6,
                            Name = "Oregano",
                            PizzaId = 3,
                            Price = 5
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cheese",
                            PizzaId = 1,
                            Price = 6
                        },
                        new
                        {
                            Id = 8,
                            Name = "Tomato",
                            PizzaId = 2,
                            Price = 7
                        },
                        new
                        {
                            Id = 9,
                            Name = "Oregano",
                            PizzaId = 3,
                            Price = 8
                        });
                });

            modelBuilder.Entity("SplitQueryPoolExhaustionRepro.Entities.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Margherita"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Marinara"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Calzone "
                        });
                });

            modelBuilder.Entity("SplitQueryPoolExhaustionRepro.Entities.Ingredient", b =>
                {
                    b.HasOne("SplitQueryPoolExhaustionRepro.Entities.Pizza", "Pizza")
                        .WithMany("Ingredients")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("SplitQueryPoolExhaustionRepro.Entities.Pizza", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
